openapi: 3.0.0
info:
  title: Pet Store API
  version: 1.0.0
  description: A sample API for testing OpenAPIInvoker

servers:
  - url: https://api.petstore.example.com/v1

components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        tags:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [available, pending, sold]
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BasicAuth:
      type: http
      scheme: basic

paths:
  /pets:
    get:
      summary: List pets
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: status
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [available, pending, sold]
      responses:
        '200':
          description: Array of pets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'

    post:
      summary: Create pet
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                photo:
                  type: string
                  format: binary
      responses:
        '201':
          description: Pet created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'

  /pets/{petId}:
    parameters:
      - name: petId
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get pet by ID
      parameters:
        - name: include-history
          in: header
          schema:
            type: boolean
      responses:
        '200':
          description: Pet found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '404':
          description: Pet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update pet
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                status:
                  type: string
      responses:
        '200':
          description: Pet updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'

    delete:
      summary: Delete pet
      security:
        - BearerAuth: []
        - ApiKeyAuth: []
      responses:
        '204':
          description: Pet deleted